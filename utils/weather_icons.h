#ifndef WEATHER_ICONS_H
#define WEATHER_ICONS_H

#include <Arduino.h>


enum WeatherIconE {
  Synny,
  Cloud,
  Rain,
  Thunder,
  Overload,
};

const WeatherIconE fromString(const String& weatherDescription){
  if (weatherDescription == "Clear") return Synny;
  if (weatherDescription == "Clouds") return Cloud;
  if (weatherDescription == "Rain")  return Rain;
  if (weatherDescription == "Thunderstorm") return Thunder;
  return Overload; 
};

enum DayIconE {
  Day,
  Night,
  OverloadD,
};

enum TempIconE {
  Plus,
  Minus,
  OverloadT,
};

struct IconT {
  const uint8_t *bmp;
  const uint8_t width;
  const uint8_t height;
  IconT() : bmp(nullptr), height(0), width(0){};
  IconT(const uint8_t *icon, const uint8_t width, const uint8_t high) : bmp(icon), height(high), width(width){};
  bool valid() const { return bmp != nullptr; }
};

// Иконка "Солнечно" (16x16 пикселей)
const uint8_t sunny_icon[] PROGMEM = {
  0x00, 0x00, 0x01, 0x80, 0x03, 0xC0, 0x07, 0xE0, 0x07, 0xE0, 0x0F, 0xF0, 0x1F, 0xF8, 0x3F, 0xFC,
  0x7F, 0xFE, 0x7F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFE, 0x7F, 0xFE, 0x3F, 0xFC,
  0x1F, 0xF8, 0x0F, 0xF0, 0x07, 0xE0, 0x03, 0xC0, 0x01, 0x80, 0x00, 0x00
};

const unsigned char cloud_icon32x16 [] PROGMEM = {
	0x00, 0x00, 0xf8, 0x00, 0x00, 0x03, 0xde, 0x00, 0x00, 0x0e, 0x03, 0x00, 0x00, 0xf8, 0x01, 0x80, 
	0x01, 0x80, 0x01, 0x80, 0x01, 0x00, 0x00, 0x80, 0x01, 0x00, 0x00, 0xc0, 0x07, 0x00, 0x00, 0x70, 
	0x0c, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x0c, 0x18, 0x00, 0x00, 0x04, 0x18, 0x00, 0x00, 0x04, 
	0x18, 0x00, 0x00, 0x04, 0x08, 0x00, 0x00, 0x0c, 0x0e, 0x00, 0x00, 0x18, 0x07, 0xff, 0xff, 0xf0
};

// Иконка "Облачно" (16x16 пикселей)
const uint8_t cloud_icon[] PROGMEM = {
  0x00, 0x00, // 1 строка
  0x00, 0x00, // 2 строка
  0x03, 0xC0, // 3 строка
  0x0F, 0xF0, // 4 строка
  0x1F, 0xF8, // 5 строка
  0x3F, 0xFC, // 6 строка
  0x3F, 0xFC, // 7 строка
  0x7F, 0xFE, // 8 строка
  0x7F, 0xFE, // 9 строка
  0x7F, 0xFE, // 10 строка
  0x7F, 0xFE, // 11 строка
  0x3F, 0xFC, // 12 строка
  0x3F, 0xFC, // 13 строка
  0x1F, 0xF8, // 14 строка
  0x0F, 0xF0, // 15 строка
  0x03, 0xC0  // 16 строка
};

// Иконка "Дождь" (16x16 пикселей)
const uint8_t rain_icon[] PROGMEM = {
  0x00, 0x00, // 1 строка
  0x00, 0x00, // 2 строка
  0x03, 0xC0, // 3 строка
  0x0F, 0xF0, // 4 строка
  0x1F, 0xF8, // 5 строка
  0x3F, 0xFC, // 6 строка
  0x3F, 0xFC, // 7 строка
  0x7F, 0xFE, // 8 строка
  0x7F, 0xFE, // 9 строка
  0x7F, 0xFE, // 10 строка
  0x7F, 0xFE, // 11 строка
  0x3F, 0xFC, // 12 строка
  0x3F, 0xFC, // 13 строка
  0x1F, 0xF8, // 14 строка
  0x0F, 0xF0, // 15 строка
  0x03, 0xC0  // 16 строка
};

// Иконка "Гроза" (16x16 пикселей)
const uint8_t thunder_icon[] PROGMEM = {
  0x00, 0x00, // 1 строка
  0x00, 0x00, // 2 строка
  0x03, 0xC0, // 3 строка
  0x0F, 0xF0, // 4 строка
  0x1F, 0xF8, // 5 строка
  0x3F, 0xFC, // 6 строка
  0x3F, 0xFC, // 7 строка
  0x7F, 0xFE, // 8 строка
  0x7F, 0xFE, // 9 строка
  0x7F, 0xFE, // 10 строка
  0x7F, 0xFE, // 11 строка
  0x3F, 0xFC, // 12 строка
  0x3F, 0xFC, // 13 строка
  0x1F, 0xF8, // 14 строка
  0x0F, 0xF0, // 15 строка
  0x03, 0xC0  // 16 строка
};

bool isDay(){
  auto now = time(nullptr);
  auto tm = localtime(&now);
  return tm->tm_hour>8 && tm->tm_hour<20;
};
const struct IconT weatherIcons[TempIconE::OverloadT][DayIconE::OverloadD][ WeatherIconE::Overload] ={
/*Day,Plus*/{
  { IconT{sunny_icon, 16,16}, IconT{cloud_icon32x16, 32, 16 }, IconT{rain_icon, 16,16}, IconT{thunder_icon, 16,16 } },
/*Day,Minus*/
  { IconT(), IconT(),IconT(),IconT() }},
/*Night,Plus*/
  {{ IconT(), IconT(),IconT(),IconT() },
/*Night,Minus*/
  { IconT(), IconT(),IconT(),IconT() }},
};
const IconT getIcon(WeatherIconE weather, int temperature=1){
  auto icon = &(weatherIcons[int(temperature>0)][int( isDay())][weather]);
  if( icon->valid() ) return *icon;
  
  icon = &(weatherIcons[int(temperature>0)][0][weather]);
  if( icon->valid() ) return *icon;

  icon = &(weatherIcons[0][int( isDay())][weather]);
  if( icon->valid() ) return *icon;
  
  return weatherIcons[0][0][weather]; 
};

const IconT getIcon(const String& description, int temperature=1){
  auto code = fromString(description);
  return getIcon(code, temperature);
};


// 'wifi', 64x64px
// -6-6
const unsigned char wifi_icon [] PROGMEM = {
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xe0, 0x00, 0x00, 
	0x00, 0x00, 0x1f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x38, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 
	0x00, 0x70, 0x00, 0x07, 0xff, 0xff, 0xfc, 0x00, 0x00, 0xe0, 0x00, 0x03, 0xff, 0xff, 0xfe, 0x00, 
	0x00, 0xc0, 0x00, 0x01, 0xff, 0xff, 0xff, 0x00, 0x00, 0xd8, 0x30, 0xd9, 0xff, 0x06, 0x7f, 0x00, 
	0x01, 0x9c, 0x70, 0xc8, 0xfe, 0x06, 0xff, 0x00, 0x01, 0x8c, 0x71, 0x80, 0xfe, 0x7f, 0xff, 0x00, 
	0x01, 0x8c, 0x71, 0x98, 0xfe, 0x7e, 0x7f, 0x00, 0x01, 0x8c, 0xf9, 0x98, 0xfe, 0x3e, 0x7f, 0x00, 
	0x01, 0x8e, 0xd9, 0x98, 0xfe, 0x06, 0x7f, 0x00, 0x01, 0x86, 0xdb, 0x18, 0xfe, 0x3e, 0x7f, 0x00, 
	0x01, 0x87, 0xdf, 0x18, 0xfe, 0x7e, 0x7f, 0x00, 0x01, 0x87, 0x8f, 0x18, 0xfe, 0x7e, 0x7f, 0x00, 
	0x00, 0x87, 0x8f, 0x18, 0xfe, 0x7e, 0x7f, 0x00, 0x00, 0xc3, 0x8e, 0x08, 0xff, 0x7e, 0x7f, 0x00, 
	0x00, 0xc0, 0x00, 0x00, 0x7f, 0xff, 0xfe, 0x00, 0x00, 0x60, 0x00, 0x00, 0x3f, 0xff, 0xfc, 0x00, 
	0x00, 0x38, 0x00, 0x00, 0x3f, 0xff, 0xf8, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 
	0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x03, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'wifi', 64x60px -8
// по две линии на строку
const unsigned char icon_wifi [] PROGMEM = {
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	// 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x0f, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 
	0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 
	0x00, 0xe0, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x00, 0x01, 0xc0, 0x00, 0x03, 0xff, 0xff, 0xff, 0x80, 
	0x01, 0x80, 0x00, 0x01, 0xff, 0xff, 0xff, 0x80, 0x03, 0x30, 0x40, 0x9d, 0xff, 0x83, 0x1f, 0xc0, 
	0x03, 0x38, 0xe1, 0xdc, 0xff, 0x03, 0x1f, 0xc0, 0x03, 0x38, 0xf1, 0x80, 0xff, 0x1f, 0xff, 0xc0, 
	0x03, 0x18, 0xf1, 0x88, 0xff, 0x3f, 0xbf, 0xc0, 0x03, 0x18, 0xf1, 0x9c, 0xff, 0x1f, 0x1f, 0xc0, 
	0x03, 0x1d, 0xbb, 0x1c, 0xff, 0x03, 0x1f, 0xc0, 0x03, 0x0d, 0x9b, 0x1c, 0xff, 0x0f, 0x1f, 0xc0, 
	0x03, 0x0f, 0x9f, 0x1c, 0xff, 0x3f, 0x1f, 0xc0, 0x03, 0x0f, 0x1f, 0x1c, 0xff, 0x3f, 0x1f, 0xc0, 
	0x03, 0x0f, 0x1e, 0x1c, 0xff, 0x3f, 0x1f, 0xc0, 0x01, 0x86, 0x0c, 0x08, 0x7f, 0xbf, 0xbf, 0x80, 
	0x01, 0x80, 0x00, 0x00, 0x7f, 0xff, 0xff, 0x80, 0x00, 0xe0, 0x00, 0x00, 0x3f, 0xff, 0xff, 0x00, 
	0x00, 0x78, 0x00, 0x00, 0x1f, 0xff, 0xfe, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 
	0x00, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe0, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
 
  
#endif
